  int n=87;
  int m=n++;//m=n++=87 , n=88;       
  int t=++n;//t=++n=89 ,n=89;
  cout<<n++<<" ";//n++=89, n++=90;
  cout<<m++<<" "<<t; //87 , 89;
NOTE: tính từng dòng code từ trên xuống  
--------------------------------------------------------------------------
  int a=100,b=200;
  int c=a++ + ++b;//a++ = 100 + ++b=201 => c=301 , a++101 ,++b =201 
  int d=a++ + b++;//a++ =101 + b++=201 => d=302 ,a++=102 ,b++=202
  cout<<a<<" "<<b<<" "<<c<<" "<<d; //a=102 , b=202 , c=301 , d =302 
--------------------------------------------------------------------------
n%10 %2== 0 Kiểm tra chữ số tận cùng là chẵn / chữ số tận cùng là bội số 2 
n%10 == 2	Kiểm tra chữ số tận cùng là 2
--------------------------------------------------------------------------
if(dtb>=8) cout<<"gioi";
else if(dtb>=6.5) cout<<"kha";
NOTE: đúng hay sai => đúng nhé vì nếu trong if else thì nó in 1 lần 
điều kiện dtb>=8 đúng thì nó in gioi còn nếu sai thì nó vẫn in khá.
--------------------------------------------------------------------------
đối với hàm max,min trên 3 chữ số thì dùng thư viện algorithm và có dấu {}
--------------------------------------------------------------------------
khai báo hằng số : const double pi=3.14;
chu vi diện tích hình tròn :
cv=2*pi*r; | dt=pi*r*r;
chu vi diện tích hình chữ nhật :
cv=2*(chiều dài+chiều rộng); | dt= chiều dài x chiều rộng;
--------------------------------------------------------------------------
hàm setw và setfill nằm trong thư viện iomanip 
cout<<setw(6)<<setfill('0')<<n;
+ setw dùng để đặt tối thiểu chữ số => setw(6)
+ setfill dùng đặt kí tự nếu thiếu chữ số => setfill('#')
nó sẽ đặt trước số nếu n=345 vì có 3 chữ số nên dùng setw
=> ###850 , 000850 trở thành 6 số vì setw yêu cầu 6 số 
--------------------------------------------------------------------------
 số thứ 1 là số lớn nhất <=a mà chia hết cho b
ví dụ số 7 thì giảm xuống thành 6 chia hết cho b =>a/b*b 
 số thứ 2 là số nhỏ nhất >=a mà chia hết cho b
ví dụ 6/2 = 3 thì lấy 3*3 = 9 vì nó lớn hơn a 
=> (a+b-1)/b*b hoặc a/b*b+b 
--------------------------------------------------------------------------
Tam giác hợp lệ thì phải có 6 điều kiện : 
3 cạnh đều dương, và tổng hai cạnh luôn lớn hơn cạnh còn lại
--------------------------------------------------------------------------
Hoán đổi dùng hàm swap(a,b) hoặc gán biến
int tmp=b;
b=a,a=tmp;
--------------------------------------------------------------------------
Mua nước : khi vào hàng hóa muốn tiết kiệm thì tính a,b
nếu chai a mà ít tiền hơn b thì mua luôn
còn chai b mà ít tiền hơn thì chia ra 2 trường hợp
nếu số lít chẳn thì n/2*b còn lẻ n/2*b+a  
--------------------------------------------------------------------------
DOMINO : nó không được phép đặt ra ngoài thì nó là kiểu int (m*n)/2
--------------------------------------------------------------------------
Lát Gạch : n dọc m ngang a là điều kiện phủ gạch chiều dọc và ngang 
không được phép phá vỡ các viên đá thì phải làm tròn lên để phủ dư 
ví dụ dọc 60cm ngang 70cm gạch 30cm thì lấy dọc/gạch=30cm lót được 2 viên 
nếu dọc%gạch==0 d=n/a; else d=n/a+1; vì có thể lót dư 
nếu ngang%gạch==0 ng=m/a; else ng=m/a+1;
cout<<dọc*ngang để phủ hết quảng trường 
--------------------------------------------------------------------------
VỊ TRÍ ẾCH NHẢY : xét K bước nhảy của nó 
ví dụ 5 bước thì bước 1 nó nhảy phải thì có 3 phải 2 trái 
nếu k chẳn thì phải=k/2; trái=k/2; vì tính cả hai
nếu k lẻ thì phải=k/2+1; trái=k/2 vì 5 bước thì bước đầu là bên phải 
cout<<tổng bước phải * a - tổng bước trái * b
tính số lần nó bước hết trái và phải 
tại sao '-' vì nó nhảy sang dương có thể nhảy lùi về 0 hoặc sang âm 
--------------------------------------------------------------------------
ĐỒNG XU : ví dụ ta có 15 ngàn mà muốn đổi ra tờ 5 xu thì ta s/n = 3 tờ 
được phép có nhiều đồng tiền thì ta có thể cộng 1 
nếu s%n chẳn thì s/n; lẻ s/n+1 
--------------------------------------------------------------------------
LEO CẦU THANG : có thể 1 bước , 2 bước , 3 bước ...
Số bước tối thiểu : (n + 1) / 2 gồm trường hợp chẵn và lẻ
MAX thì 1 bước thì nhiều bước nhất , MIN thì lại ít bước 
n=10,m=2 thì m nó có thể đi 1 bước hoặc 2 bước để đạt đủ 10 bước  
số lần di chuyển là bội số của một số nguyên m thì tìm bước tối thiểu 
sau đó chia m chẳn thì 
đặt a=min // là số lần bước tối thiểu khi tính xong 
b=m // bội số m để chia 
nếu a%b==0 cout<<a; vì nó đi 1 bước 
else cout<<(a/b+1)*b vì nó đi 2,3... bước  // để tính bội số tiếp theo 
a/b*b+b có thể dùng nhưng không thể trực tiếp làm tròn 
--------------------------------------------------------------------------
+ for ( [Câu lệnh khởi tạo] ; [Điều kiện lặp] ; [Câu lệnh cập nhật] ){
    // Code trong vòng lặp
  }
+ while ( [Điều kiện lặp] ){
    // Code trong vòng lặp
  {
+  do {
      // Code trong vòng lặp
  } while ( [Điều kiện lặp] );
NOTE : + biết trước vòng lặp thì dùng for  
+ while không áp dụng số 0 khi đếm nên dùng if else để đặt n==0 cout<<1;
nên return vì không return nó sẽ chạy từng dòng xuống dưới 
n%10 dùng để lấy số
n/10 dùng để xóa số 
--------------------------------------------------------------------------
for(int i=1;i<15;i*=2) {
    cout<<i<<" ";    // 1 2 4 8 -> 8*2=16 nó vượt 15 nên dừng 
  }
  cout<<i;   // báo lỗi vì chưa khai báo 
--------------------------------------------------------------------------
for(int i=1;i<=15;i++){
    cout<<i<<" "; 
    if(i%2==0) i++;
    else i+=2;   
}
i=1 cout<<i ra 1 xuống dòng 1%2==1 
i=1 vào else i=3 trở về i++ = 4 <=15 
i=4 vào if i=5 trở về i++ = 6 <=15 
i=6 vào if i=7 trở về i++ = 8 <=15
i=8 vào if i=9 trở về i++ = 10 <=15
i=10 vào if i=11 trở về i++ = 12 <=15
i=12 vào if i=13 trở về i++ = 14 <=15
i=14 vào if i=15 trở về i++ = 16 >=15 nên sai 
i =  1 4 6 8 10 12 14 
NOTE : tăng trong if else xong thì sẽ tăng 1 đơn vị trong for 
int i = n + 1;  // i = 45 nếu n = 44 // khi >n ,< n thì i=n+1 , n-1 
while (true) { 
    if (i % 17 == 0) {  //i=45 thì sai nên nó không chạy if mà xuống i++
        cout << i << endl;
        break;
    }
    i++; //tăng đơn vị đến khi nào nó chạy được trong if 
}
-------------------------------------------------------------------------
Tìm số nhỏ nhất >=a chia hết cho b
a=23 , b=7 
for(int i=a; ;i++){  // đến khi nó chia hết cho b thì nó dừng
  if(i%b==0) {
    cout<<i; 
    break;      // phải có điều kiện dừng break 
  }
}
--------------------------------------------------------------------------
IN KÍ TỰ KẾ TIẾP  ví dụ : a b c d e 
ll n; cin>>n;
  for(char i=97;i<97+n;i++) {
    cout<<i<<" ";
  }
97+5=102 -> a b c d e f vì i<97+n nên đến e là dừng   
ll n; cin>>n;
  char c='a';
  int dem=0;
  while(dem<n){ // 0<5 
    cout<<c<<" "; // a 
    c++; // b 
    dem++; //2<5 quay về thành b , c , d , e 
  }
--------------------------------------------------------------------------
n*n-1 và 2*n-1 khác nhau hoàn toàn  vd : n=37 
n*n -> 1369 - 1 còn 2*n -> 74 - 1 
nên khai báo long long cho biến gán vì có thể bị tràn và ép kiểu 1ll
--------------------------------------------------------------------------
các bài toán tìm ước , số chính phương  : duyệt từ 1 đến căn n : i*i<=n 
for(int i=1;i*i<=n;i++) cout<<i*i<<" "; 



















